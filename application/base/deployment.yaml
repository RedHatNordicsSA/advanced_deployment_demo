apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: 2.3.4-2-redhat
    app.openshift.io/vcs-uri: https://github.com/snowdrop/rest-http-example
    deployment.kubernetes.io/revision: "2"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"rest-http-example:latest","namespace":"bec-test"},"fieldPath":"spec.template.spec.containers[?(@.name==\"rest-http-example\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  labels:
    app: rest-http-example
    app.kubernetes.io/component: rest-http-example
    app.kubernetes.io/instance: rest-http-example
    app.kubernetes.io/name: java
    app.kubernetes.io/part-of: rest-http-example-app
    app.openshift.io/runtime: java
    app.openshift.io/runtime-version: openjdk-11-ubi8
  name: rest-http-example
  namespace: demo4
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: rest-http-example
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: rest-http-example
        deploymentconfig: rest-http-example
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/bec-test/rest-http-example@sha256:9256f71decd0356ebaa513ebb2994b2328315fb451c6969d1a4464b80da2b6bd
        imagePullPolicy: Always
        name: rest-http-example
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
